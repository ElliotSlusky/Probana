type Deposit @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketCreated @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt! # uint256
  question: String! # string
  rules: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketResolved @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt! # uint256
  winningOutcome: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderCancelled @entity(immutable: true) {
  id: Bytes!
  orderId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderMatched @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt! # uint256
  orderId1: BigInt! # uint256
  orderId2: BigInt! # uint256
  matchedAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderPlaced @entity(immutable: true) {
  id: Bytes!
  orderId: BigInt! # uint256
  marketId: BigInt! # uint256
  trader: Bytes! # address
  side: Int! # uint8
  outcome: Int! # uint8
  amount: BigInt! # uint256
  price: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type WinningsClaimed @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt! # uint256
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdrawal @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
